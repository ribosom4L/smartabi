import { BlockchainNetworkId, SubscribeEvent, ContractEvent } from '../types'
import ####CONTRACT_NAME####Abi from './abi/####CONTRACT_NAME####.json'
import Web3 from 'web3'
import { PromiEvent } from 'web3-core'
import * as BN from 'bn.js'
import { BaseContract } from './BaseContract'
import { EventBase } from '../EventBase'
import { Contract, EventOptions, PastEventOptions, SendOptions } from 'web3-eth-contract'

####INTERFACES####

export class ####CONTRACT_NAME#### extends BaseContract {
  readonly events: ####CONTRACT_NAME####Events
  abi = ####CONTRACT_NAME####Abi as any

  constructor(web3: Web3, network: BlockchainNetworkId) {
    super(web3, network)

    this.events = new ####CONTRACT_NAME####Events(this.getContract())
  }

  getName(): string {
    return '####CONTRACT_NAME####'
  }

  ####FUNCTIONS####

}

export class ####CONTRACT_NAME####Events extends EventBase {
   ####PAST_EVENTS####

   ####SUBS_EVENTS####
}
